@use 'variables' as var;
@use 'mixins' as mix;
@use 'sass:list';
@use "sass:color";

.search {
  width: 100%;
  display: flex;
  flex-direction: column;
  gap: 40px;
  z-index: 10;
}

.search__text-wrapper {
  display: flex;
  flex-direction: column;
  gap: 16px;
}

.search__header {
  font-weight: bold;
  font-size: 36px;
  background-color: transparent;
}

.search__text {
  font-size: 18px;
}

.search__input-wrapper {
  width: 100%;
  background-color: white;
  display: grid;
  
  grid-template-columns: 1fr auto; 
  align-items: center;
  padding: 10px 20px;
  box-shadow: var.$drop-shadow-properties var.$drop-shadow-color;
  border-radius: 10px;
  gap: 16px;
}

.search__input {
  height: 20px;
  border: 0;
  font-size: 16px;
  background: none; // Good practice to make sure it's transparent
  outline: none;

  &::placeholder {
    color: rgba(var.$text-color, 0.5);
  }
}

.search__button {
  display: flex;
  justify-content: center;
  align-items: center;

  padding: 5px;
  background-color: var.$primary-red;
  border-radius: 10px;
  border: none;
  box-shadow: 0px 0px 8px 0px rgba(var.$primary-red, 0.5);

  @include mix.interactive-darken;
}

@keyframes loading {
  0% { transform: rotate(0deg); }
  100% { transform: rotate(360deg); }
}

.pokemon-card {
  position: relative;
  color: black;
  display: flex;
  flex-direction: column;
  padding: 10px 20px;
  gap: 16px;
  border-radius: 15px;
  overflow: hidden;
  background-color: white;
  @include mix.interactive-hover();

  &--loading {
    background-color: rgba(var.$text-color, 0.1);
    width: 100%;
    box-shadow: none;
    cursor: default;
    transition: none;
  }

  &__loader-wrapper {
    height: 165px; // I had to play around with this, size is similar to the original card i guess
    display: flex;
    justify-content: center;
    align-items: center;
  }

  &__loader {
    border-radius: 50%;
    border: 5px solid var.$primary-red;
    border-top-color: transparent;
    width: 40px;
    height: 40px;
    animation-name: loading;
    animation-fill-mode: forwards;
    animation-duration: 1s;
    animation-timing-function: linear;
    animation-iteration-count: infinite;
  }

  @each $type, $colors in var.$pokemon-types {
    $card-color: list.nth($colors, 1);
    &--#{$type} {
      background-color: $card-color;
    }
  }

  &__ball {
    position: absolute;
    bottom: -15px;
    right: -15px;
    width: 125px;
    height: 125px;
    filter: opacity(25%);
    pointer-events: none;
    user-select: none;
  }

  &__header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    pointer-events: none;
    user-select: none;

  }
  
  &__id {
    font-size: 14px;
    color: rgba($color: var.$text-color, $alpha: 0.5);
  }

  &__content-wrapper {
    display: flex;
    justify-content: space-between;

  }
  
  &__sprite {
    max-width: 150px;
    max-height: 150px;
    z-index: 5;
  }
  
  &__types {
    display: flex;
    flex-direction: column;
    gap: 4px;
    list-style: none;
  }

  &__type {
    padding: 4px 10px;
    border-radius: 20px;
    width: 5rem;
    text-align: center;
    background-color: white;
    display: inline-block;
    color: var.$text-color;
    font-weight: 500;
    pointer-events: none;
    user-select: none;

    @each $type, $colors in var.$pokemon-types {
      $type-indicator-color: list.nth($colors, 2);
      $type-indicator-text-color: if(list.length($colors) >= 3, list.nth($colors, 3), white);

      &--#{$type} {
        background-color: $type-indicator-color;
        color: $type-indicator-text-color;
      }
    }
  }
}

.bg_img__wrapper {
  position: absolute; 
  right: 0px;
  top: 0px;
  width: 100%;
  height: 100%;
  overflow: hidden;
  z-index: -5;
}

.bg_img__wrapper_wrapper {
  position: relative;
}

.bg_img {
  pointer-events: none;
  user-select: none;
  position: absolute;   
  top: -100px;
  right: -100px;
  filter: invert(1) opacity(5%);
  z-index: -5;
}

.icon {
  display: flex;
  justify-content: center;
  align-items: center;
  
  &--sm {
    font-size: 1rem;
    max-width: 1rem;
  }

  &--md {
    font-size: 18px;
    max-width: 18px;
  }

  &--lg {
    font-size: 20px;
    max-width: 20px;
  }

  &--white {
    color: white;
  }
}

.button {
  display: inline-block;
  text-align: center;
  padding: 16px 24px;
  font-size: 1rem;
  border-radius: 10px;
  font-weight: bold;
  font-family: var.$main-font;
  color: var.$text-color;
  border: none;
  cursor: pointer;
  @include mix.interactive-darken();

  &--primary {
    background-color: var.$primary-red;
    color: white;
  }

  &--light {
    background-color: rgba(var.$text-color, 0.8);
  }

  &--hidden {
    display: none
  }

  &--ghost {
    background-color: transparent;
  }

  &--outline {
    background-color: transparent;
    border: 1px;
  }

  &--no-hover {
    &:hover {
      background-color: none;
      filter: none;
    }
    
  }
}

.filters {
  width: 100%;
  display: flex;
  flex-direction: column;
  gap: 30px;
}

.filters__input {
  padding: 10px 20px;
  border-radius: 10px;
  background-color: transparent;
  border: 1px solid var.$text-color;
  max-width: 5rem;
}

.filters__btn-container {
  display: flex;
  gap: 1rem
}

.flex-item {
  flex: 1;
}

.filters__btn {
  padding: 0px 12px;
  border-radius: 10px;
  background-color: rgba(var.$text-color, 0.9);
  color: white;
  border: none;
} 

.rounded {
  border-radius: 50%;
  background-color: rgba(var.$text-color, 0.8);
  padding: 4px;
}

.dropdown {
  position: relative;
}

.dropdown__toggle {
  width: 100% ;
  background-color: var.$dark-grey;
  color: white;
  border-radius: 5px;
  padding: 10px 20px;
  cursor: pointer;
  font-weight: bold;
  border: none;
  display: flex;
  justify-content: space-between;
  align-items: center;
}

.dropdown__toggle:focus-visible {
  outline-color: var.$primary-red;
  filter: brightness(0.80);
}

/* Handle long text with "..." */
.click-and-replace-text__text {
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  display: block;
  width: 100%;
  text-align: left;
}

.dropdown__toggle--w-sm {
  width: 150px;
}

.filter-section {
  width: 100%;
}

.dropdown__toggle--w-md {
  width: 100%;
}

.dropdown__target {
  position: absolute;
  visibility: hidden;
  background-color: var.$lighter-dark-color;
  color: white;
  width: 100%;
  top: 100%;
  left: 0%;
  z-index: 10;
  margin-top: 8px;
  border-radius: 10px;
  box-shadow: 0px 4px 8px 0px rgba(var.$text-color, 0.3);
}

.dropdown__target--open {
  visibility: visible;
}

.visiblity__target {
  position: absolute;
  display: none;
  visibility: hidden;
  width: 0;
  height: 0;
}

.select__container {
  display: flex;
  flex-direction: column;
}

.select__item {
  color: white;
  padding: 1rem 1rem;
  width: 100%;
  background-color: transparent;
  display: flex;
  justify-content: start;
  align-items: center;
  border: none;
  text-align: start;
  font-weight: 500;
  cursor: pointer;
  border-top: 1px solid color.change(oklch(70.4% 0.04 256.788deg), $alpha: 0.4);

  &:hover {
    background-color: color.change(oklch(70.4% 0.04 256.788deg), $alpha: 0.2);
  }
}

.select__item--no-hover {
  &:hover {
    background-color: rgba(var.$text-color, 0); // invisible;
  }
}

.filter_options {
  max-height: 400px;
  overflow-y: scroll;
}

.toggle__ui {
  position: relative;
  display: block;
  width: 33px;
  height: 32px;
  justify-content: center;
  align-items: center;
  cursor: pointer;
}

.toggle__ui::before {
  content: "";
  color: rgba(var.$text-color, $alpha: 0.5);
  font-weight: bold;
  width: 30px;
  height: 30px;
  border-radius: 50%;
  background-color: white;
  position: absolute;
  border: 2px solid rgba(var.$text-color, $alpha: 0.5);
  transition: color 0.1s ease-in-out;
  text-align: center;

  display: flex;
  justify-content: center;
  align-items: center;    

}

.toggle__ui--type::before {
  content: 'T';
}

.toggle__ui--weakness::before {
  content: 'W';
}

.toggle__input {
  appearance: none;
  position: absolute;
}

.toggle__input:checked + .toggle__ui::before {
  color: var.$primary-red;
  border-color: var.$primary-red;
}

.toggle__input:focus-visible + .toggle__ui::before {
  outline: solid black;
  filter: brightness(0.90);
}

#filter-controls {
  background-color: white;
  box-shadow: var.$drop-shadow-properties var.$drop-shadow-color;  
  padding: 30px 40px;
  border-radius: 10px;
}

#filter-type-options {
  column-gap: 28px;
  width: 100%;
}

.filter-grid {
  display: grid;
  grid-template-columns: 1fr 1fr;
  grid-template-rows: 1fr auto;
  column-gap: 40px;
  row-gap: 30px;
}

.id-range {
  align-items: end;
}

.filter-btn-text::before {
  content: 'Advanced Filters';
}

.back-to-top {
  flex-direction: column;
  position: fixed;
  display: flex;
  bottom: 2rem;
  right: 2rem;
  gap: 8px;
  color: var.$primary-red;
  border: none;
  background-color: transparent;
  z-index: 100;
  cursor: pointer;

  opacity: 0; /* Start fully transparent */
  pointer-events: none; /* Make it unclickable when invisible */
  transform: translateY(20px); /* Optional: Start slightly lower for a slide-up effect */
  transition: opacity 0.3s ease-in-out, transform 0.3s ease-in-out;
}

.back-to-top--show {
  opacity: 1; /* Make it fully visible */
  pointer-events: auto; /* Make it clickable again */
  transform: translateY(0); /* Optional: Move it to its final position */
}

.back-to-top__symbol {
  display: inline-block;
  width: 50px;
  height: 50px;
  border-radius: 50%;
  font-size: 1rem;
  font-weight: 600;
  background-color: white;
  color: var.$primary-red;
  box-shadow: var.$drop-shadow-properties var.$drop-shadow-color;
}

@media (max-width: 750px) {
  .pokemon-card {
    padding: 10px 15px;
  }

  .results__container {
    grid-template-columns: 1fr 1fr;
    row-gap: 20px;
    column-gap: 20px;

  }

  #filter-controls {
    padding: 15px 20px;
  }

  .back-to-top {
    bottom: 1rem;
    right: 1rem;
  }

}

@media (max-width: 700px) {
  .filter-grid {
    grid-template-columns: 1fr;
    grid-template-rows: 1fr auto;
    gap: 40px;
  }

  .filter-grid > * {
    grid-column: 1 / -1 !important; /* Tell every item to start at column line 1 and end at the very last line (-1) */
    grid-row: auto !important;
    align-items: start !important;
  }

  .filter-section {
    width: 100%;
  }

  .dropdown__toggle--w-md {
    width: 100%;
  }

  .dropdown__toggle {
    width: 100%;
  }
  
  .id-range {
    align-items: center;
  }
}

@media (max-width: 450px) {
  #filter-controls {
    padding: 10px;
  } 

  #filter-type-options {
    column-gap: 14px;
    width: 100%;
  }

  #filter-type-options .pokemon-card__type {
    width: 4.5rem;
    padding-left: 0px;
    padding-right: 0px;
  }

  .filter-btn-text::before {
    content: 'Filters' !important;
  }
}


@media (max-width: 550px) {
  .results__container {
    grid-template-columns: 1fr;
  }

  .pokemon-card {
    padding: 10px 20px;
  }
}