@use 'variables' as var;
@use 'mixins' as mix;
@use 'sass:list';

.search {
  display: flex;
  flex-direction: column;
  gap: 40px;
  z-index: 10;

  .search-text-wrapper {
    display: flex;
    flex-direction: column;
    gap: 16px;

    .search__header {
      font-weight: bold;
      font-size: 36px;
    }

    .search__text {
      font-size: 18px;
    }
  }

  .search__input-wrapper {
    width: 100%;
    background-color: white;
    display: grid;
    // This is correct! 1fr = take all remaining space, auto = fit the content.
    grid-template-columns: 1fr auto; 
    align-items: center;
    padding: 10px 20px;
    box-shadow: var.$drop-shadow-properties var.$drop-shadow-color;
    border-radius: 10px;
    gap: 16px;

    .search__input {
      height: 20px;
      border: 0;
      font-size: 16px;
      background: none; // Good practice to make sure it's transparent
      outline: none;

      &::placeholder {
        color: rgba(var.$text-color, 0.5);
      }
    }

    .search__button {
      display: flex;
      justify-content: center;
      align-items: center;

      padding: 5px;
      background-color: var.$primary-red;
      border-radius: 10px;
      border: none;
      box-shadow: 0px 0px 8px 0px rgba(var.$primary-red, 0.5);

      @include mix.interactive-darken;
    }
  }
}

.results {
  .results__container {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr;
    width: 100%;
  }
}

@keyframes loading {
  0% { transform: rotate(0deg); }
  100% { transform: rotate(360deg); }
}

.pokemon {

  .pokemon__ball {
    position: absolute;
    bottom: -15px;
    right: -15px;
    width: 125px;
    height: 125px;
    filter: opacity(25%);
  }

  &.loading {
    background-color: rgba(var.$text-color, 0.1);
    width: 100%;
    box-shadow: none;
    cursor: default;
    transition: none;

    .indicator__wrapper {
      height: 165px; // I had to play around with this, size is similar to the original card i guess
      display: flex;
      justify-content: center;
      align-items: center;

      .indicator {
        border-radius: 50%;
        border: 5px solid var.$primary-red;
        border-top-color: transparent;
        width: 40px;
        height: 40px;
        animation-name: loading;
        animation-fill-mode: forwards;
        animation-duration: 1s;
        animation-timing-function: linear;
        animation-iteration-count: infinite;
      }
    }

  }


  @include mix.interactive-hover();

  position: relative;
  color: black;
  display: flex;
  flex-direction: column;
  padding: 10px 20px;
  gap: 16px;
  border-radius: 15px;
  overflow: hidden;
  background-color: white;

  @each $type, $colors in var.$pokemon-types {
    $card-color: list.nth($colors, 1);
    &.#{$type} {
      background-color: $card-color;
    }
  }

  .pokemon__header {
    display: flex;
    justify-content: space-between;
    align-items: center;

    .pokemon__id {
      font-size: 14px;
      color: rgba($color: var.$text-color, $alpha: 0.5);
    }
  }

  .pokemon__content-wrapper {
    display: flex;
    justify-content: space-between;

    .pokemon__types {
      display: flex;
      flex-direction: column;
      gap: 4px;
      list-style: none;
    }

    .pokemon__sprite {
      max-width: 140px;
      max-height: 140px;
      z-index: 5;
    }
  }
}

.pokemon__types {
  color: var.$text-color;
  font-weight: 500;
  border: none;

  & span {
    padding: 4px 10px;
    border-radius: 20px;
    background-color: white;
    display: inline-block;

  }

  @each $type, $colors in var.$pokemon-types {
    $type-indicator-color: list.nth($colors, 2);
    $type-indicator-text-color: if(list.length($colors) >= 3, list.nth($colors, 3), white);

   li.#{$type} span {
      background-color: $type-indicator-color;
      color: $type-indicator-text-color;
    }
  }
}



.bg_img__wrapper {
  position: absolute; 
  right: 0px;
  top: 0px;
  width: 100%;
  height: 100%;
  overflow: hidden;
  z-index: -5;

}

.bg_img__wrapper_wrapper {
  position: relative;
}

.bg_img {
  pointer-events: none;
  user-select: none;
  position: absolute;   
  top: -100px;
  right: -100px;
  filter: invert(1) opacity(5%);
  z-index: -5;
}

.center-icon {
  display: flex;
  justify-content: center;
  align-items: center;
  font-size: 20px;
}

#filter-btn {
  background-color: transparent;
  border: none;
  padding: 10px;
  border-radius: 10px;
  cursor: pointer;

  &:hover {
    background-color: rgba(var.$text-color, 0.1);
  }

}


.button {
  display: inline-block;
  text-align: center;
  padding: 16px 24px;
  font-size: 1rem;
  border-radius: 10px;
  font-weight: bold;
  border: none;

  @include mix.interactive-darken();
}

.button--primary {
  background-color: var.$primary-red;
  color: white;
}

.button--hidden {
  display: none
}