@use 'variables.scss' as var;

$spacing-values: 4, 8, 12, 16, 20, 24, 28, 32, 36, 40; // in px
$grid-dimensions: 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12;

@each $space in $spacing-values {
  .u-gap-#{$space} {
    gap: #{$space}px;
  }

  .u-px-#{$space} {
    padding-left: ($space / 2) + px;
    padding-right: ($space / 2) + px;
  }
}

.grid {
  display: grid;
}

.u-flex-wrap {
  flex-wrap: wrap;
}

.u-flex {
  display: flex;
}

.u-items-center {
  align-items: center;
}

.u-justify-center {
  justify-content: center;
}

.u-items-end {
  align-items: end;
}

.u-flex-col {
  flex-direction: column;
}

.u-justify-between {
  justify-content: space-between;
}

.u-justify-end {
  justify-content: end;
}

.u-w-full {
  width: 100%;
}

.u-p-0 {
  padding: 0;
}

.u-font-bold {
  font-weight: bold;
}

.u-font-normal {
  font-weight: normal;
}

.u-text-light {
  color: var.$text-light;
}

.u-border--light {
  border: rgba(var.$text-color, 0.8); 
}
.u-grid {
  display: grid;
}

.u-m-auto {
  margin: auto;
}

.u-h-full {
  height: 100%;
}

@each $dimension in $grid-dimensions {
  .u-cols-#{$dimension} {
    grid-template-columns: repeat(#{$dimension}, 1fr);
  }

  .u-rows-#{$dimension} {
    grid-template-rows: repeat(#{$dimension}, 1fr);
  }

  .u-col-#{$dimension} {
    grid-column: #{$dimension} / #{($dimension + 1)};
  }

  .u-row-#{$dimension} {
    grid-row: #{$dimension} / #{($dimension + 1)};
  }
  
}

.u-max-w-half {
  max-width: 50%;
}

.u-justify-evenly {
  justify-content: space-evenly;
}